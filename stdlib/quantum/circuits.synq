// SynQ Commercial Attribution License v1.0
// © 2025 SynQ Contributors. All rights reserved.
// This file is part of the SynQ programming ecosystem.

// File: stdlib/quantum/circuits.synq

// --- Quantum Circuit Templates ---

fn bell(q0, q1):
    H(q0)
    CNOT(q0, q1)

fn ghz(qs):
    if len(qs) < 2 {
        print("Need at least 2 qubits for GHZ")
        return
    }
    H(qs[0])
    for i in range(1, len(qs)) {
        CNOT(qs[0], qs[i])

fn qft(qs):
    n = len(qs)
    for i in range(n):
        H(qs[i])
        for j in range(i + 1, n):
            theta = π / (2 ** (j - i))
            apply gate CRZ(theta) on qs[j], qs[i]
    reverse(qs)

fn teleport(q0, q1, q2):
    bell(q1, q2)
    CNOT(q0, q1)
    H(q0)
    m0 = measure(q0)
    m1 = measure(q1)
    if m1 == 1 { X(q2) }
    if m0 == 1 { Z(q2) }

fn apply_all(qs, gate_fn):
    for q in qs {
        gate_fn(q)
    }